services:
  app:
    build: ./app
    container_name: app_service
    ports:
      - "4200:4200" # Puerto para la aplicación Angular
    volumes:
      - ./app:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - gateway
    environment:
      - CHOKIDAR_USEPOLLING=true
  # Servicio RabbitMQ
  rabbit:
    image: rabbitmq:3.10-management
    container_name: rabbitmq_service
    ports:
      - "5672:5672" # Puerto para la conexión de RabbitMQ
      - "15672:15672" # Puerto para la interfaz de administración web
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    volumes:
      - rabbitmq_data:/opt/rabbitmq/var/lib/rabbitmq  # Persistencia de datos
  # Servicio Node.js (NestJS)
  orders:
    build: ./orders    
    container_name: orders_service
    depends_on:
      rabbit:
        condition: service_healthy
    ports:
      - "3000:3000" # Puerto para la aplicación NestJS
    environment:
      - RABBITMQ_HOST=rabbit  # Host de RabbitMQ
      - RABBITMQ_PORT=5672    # Puerto de RabbitMQ
      - NODE_ENV=development   # Opcional: para configuración de entorno de desarrollo
      - RABBITMQ_USER=admin
      - RABBITMQ_PASS=admin
    volumes:
      - ./orders:/app # Monta el directorio local para la aplicación (desarrollo)
  billings:
    build: ./billings    
    container_name: billings_service
    depends_on:
      rabbit:
        condition: service_healthy
    ports:
      - "3001:3001" # Puerto para la aplicación NestJS
    environment:
      - RABBITMQ_HOST=rabbit  # Host de RabbitMQ
      - RABBITMQ_PORT=5672    # Puerto de RabbitMQ
      - NODE_ENV=development   # Opcional: para configuración de entorno de desarrollo
      - RABBITMQ_USER=admin
      - RABBITMQ_PASS=admin
    volumes:
      - ./billings:/app # Monta el directorio local para la aplicación (desarrollo)
  gateway:
      build: ./gateway
      container_name: gateway_service
      ports:
        - "3003:3003"
      depends_on:
        - orders
        - billings
  mongo:
    image: mongo:6.0
    container_name: mongo_service
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_BASICAUTH: "false"
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
      ME_CONFIG_MONGODB_AUTH_DATABASE: ""
      ME_CONFIG_MONGODB_ADMINUSERNAME: ""
      ME_CONFIG_MONGODB_ADMINPASSWORD: ""
    depends_on:
      - mongo
volumes:
  rabbitmq_data:
    driver: local
  mongo_data: {}